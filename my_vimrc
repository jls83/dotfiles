if has('nvim')
    set termguicolors
endif

let mapleader = " "

" Plug.vim steps
call plug#begin()
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'scrooloose/nerdtree'
Plug 'vimwiki/vimwiki'
Plug 'itchyny/lightline.vim'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Testing these
Plug 'Yggdroot/indentLine'
Plug 'kalekundert/vim-coiled-snake'
Plug 'Konfekt/FastFold'

call plug#end()

syntax on
syntax enable
filetype plugin indent on

let g:lightline = {
    \ 'colorscheme': 'jellybeans',
    \ 'active': {
    \     'left': [ [ 'mode', 'paste' ],
    \               [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
    \ },
    \ 'component_function': {
    \     'gitbranch': 'fugitive#head',
    \ },
    \ }

set background=dark
set noshowmode
colorscheme distinguished

set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

"Filetype-specific tab info
autocmd Filetype html setlocal ts=2 sw=2 sts=2
autocmd Filetype ps1 setlocal ts=2 sw=2 sts=2
autocmd Filetype sql setlocal ts=2 sw=2 sts=2
autocmd Filetype yaml setlocal ts=2 sw=2 sts=2

set number
set showcmd
set cursorline
set ruler

set list
set listchars=tab:▸\ ,eol:¬

" iTerm Blinkencursorzeit
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" VimWiki settings
let g:vimwiki_list = [{'path': '~/vimwiki', 'syntax': 'markdown', 'ext': '.md'}]

inoremap jk <esc>

" NerdTree items
nnoremap <leader>1 :NERDTreeToggle<CR>
nnoremap <leader>sip :NERDTreeFind<CR>

" CoC items
inoremap <silent><expr> <TAB>
    \ pumvisible() ? "\<C-n>" :
    \ <SID>check_back_space() ? "\<TAB>" :
    \ coc#refresh()
inoremap <expr> <S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

