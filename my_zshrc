source fzf_items

# Custom alias functions
maccopy() {
    cat $1 | pbcopy
}

xclipCopy() {
    cat $1 | xclip -selection clipboard
}

prFunc() {
    previous_dir=$(pwd);
    cd /sites/ycharts;

    github_base_url="https://github.com/ycharts/ycharts/compare/develop...jls83:";
    current_branch=$(git branch | grep \* | cut -d ' ' -f2);
    open -na "Google Chrome" "$github_base_url$current_branch";

    if [[ $1 != 'no' ]]; then
        vim ~/pr.md;
        cat ~/pr.md | pbcopy;
    fi

    cd $previous_dir;
}

openVgShell() {
    previous_dir=$(pwd);
    cd /sites/ycharts;
    vagrant ssh bionic -- -t \
        "source /home/vagrant/.virtualenvs/ycharts/bin/activate;" \
        "source /home/vagrant/.vagrant_bash_profile_local;" \
        "python /sites/ycharts/manage.py shell_plus";
    cd $previous_dir;
}

openVgTmux() {
    previous_dir=$(pwd);
    SESSION_NAME="ycSession"

    # Possible error messages to handle
    NO_SERVER_RUNNING="no server running"
    NO_SESSIONS="no sessions"

    echo "Checking for $SESSION_NAME...";
    cd /sites/ycharts;
    session_list_result=$(vagrant ssh bionic -- -t "tmux ls" 2>&1);
    if [[ $session_list_result != *$SESSION_NAME* ]] \
        || [[ $session_list_result == *$NO_SERVER_RUNNING* ]] \
        || [[ $session_list_result == *$NO_SESSIONS* ]]; then
        echo "No $SESSION_NAME created, creating new session...";
        # Redirect stderr to /dev/null so we don't get a "connection closed" message
        vagrant ssh bionic -- -t "tmux new -d -s $SESSION_NAME" 2>/dev/null;
    else
        echo "Found $SESSION_NAME session, connecting...";
    fi
    vagrant ssh bionic -- -t "tmux attach -t $SESSION_NAME";

    cd $previous_dir;
}

gitQuicksave() {
    MSG=$(git checkout -b tmp 2>&1)
    if [[ $MSG == "fatal: A branch named 'tmp' already exists." ]]; then
        echo "'tmp' already exists; deleting";
        git branch -D tmp;
        git checkout -b tmp;
    fi
}

case `uname` in
    "Darwin")
        source ~/.bash_profile

        export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"
        export ZSH="/Users/jls83/.oh-my-zsh"

        # PyEnv junk
        export PATH="/Users/jls83/.pyenv:$PATH"
        eval "$(pyenv init -)"

        alias npr=prFunc
        alias vgs=openVgShell
        alias vgt=openVgTmux

        alias vg='cd /sites/ycharts && vagrant ssh bionic'
        alias ycs='cd /sites/ycharts'
        alias gitr='cd /sites/ycharts && git checkout develop && git pull origin develop'

        alias wcp=maccopy

        # Alias to copy all SCSS files to proper directory in `ycharts` project
        SCSS_SOURCE_DIR='/sites/ycharts_pdf_pages/app/styles'
        SCSS_DEST_DIR='/sites/ycharts/apps/custom_pdf_reports/static/custom_pdf_report_template/scss'
        alias sass_copy='cp -R $SCSS_SOURCE_DIR $SCSS_DEST_DIR'

        ;;

    "Linux")
        export PATH="/home/jls83/.pyenv/bin:$PATH"
        export ZSH="/home/jls83/.oh-my-zsh"
        export DOTNET_CLI_TELEMETRY_OUTPUT_OPTOUT=1

        alias ipython='python -m IPython'
        alias nvim='/home/jls83/appimages/nvim.appimage'

        alias wcp=xclipCopy

        # PyEnv Junk
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
        export PYENV_ROOT="/home/jls83/.pyenv"
        export PIPENV_PYTHON="$PYENV_ROOT/shims/python"
        ;;
esac

# Both Linux and Mac have themes called `crcandy_edit`
ZSH_THEME="crcandy_edit"

# I use the FZF items everywhere
alias gh=fzfGitLocalBranches 
plugins=(
  git
)

source $ZSH/oh-my-zsh.sh

alias qs=gitQuicksave
